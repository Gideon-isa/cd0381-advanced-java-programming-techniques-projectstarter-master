Written Questions

Q1. Run the web crawler using the configurations located at src/main/config/written_question_1a.json and
    src/main/config/written_question_1b.json. The only difference between these configurations is that one always uses
    the sequential crawler and the other always uses the parallel crawler. Inspect the profile output in
    profileData.txt.

    If you are using a multi-processor computer, you should notice that SequentialWebCrawler#crawl and
    ParallelWebCrawler#crawl took about the same amount of time, but PageParserImpl#parse took much longer when run with
    the ParallelWebCrawler.

    Why did the parser take more time when run with ParallelWebCrawler?

    Answer :- The Parser took more time for the ParallelWebCrawler because it captures and sums up all the
              time it took in each of the threads.




Q2. Your manager ran your crawler on her old personal computer, using the configurations from Q1, and she notices that
    the sequential crawler actually outperforms the parallel crawler. She would like to know why.

    (a) Suggest one reason why the sequential web crawler was able to read more web pages than the parallel crawler.
        (Hint: Try setting "parallelism" to 1 in the JSON configs to simulate your manager's computer.)

    Answer :- One reason is that old computers lack multiple CPU cores to run threads for the parallel webcrawler.
              This will result to more time to execute these threads with multiple-core computer.

    (b) Suggest one scenario in which the parallel web crawler will almost certainly perform better than the sequential
        crawler. Why will it perform better?

    Answer :- On a multiple-core computer, the parallel webcrawler will outperform better than the sequential webcrawler
              The parallel webcrawler will perform multiple tasks in threads simultaneously.




Q3. Analyze your method profiler through the lens of Aspect Oriented Programming, by answering the following questions:

    (a) What cross-cutting concern is being addressed by the com.udacity.webcrawler.profiler.Profiler class?
        Answer :- It addresses the performance profiling of methods

    (b) What are the join points of the Profiler in the web crawler program?
        Answer :- Methods annotated with @Profiled




Q4. Identify three (3) different design patterns used in this project, and explain which interfaces, classes, and/or
    libraries use or implement those design patterns.

    For each pattern, name one thing about the pattern that you LIKED, and one thing you DISLIKED. If you did not like
    anything, you can name two things you disliked.

     Answers:
     1. Dependency Injection used in WebCrawlerMain Class
     Like : Reduces dependencies needed
     Dislike : It takes or requires more interfaces

     2. Builder used in CrawlerResult and CrawlerConfiguration classes
     Like : Separate construction and representation of objects
     Dislike : Error prone

     3. Proxy Pattern used in ProfilerImpl and ProfilingMethodInterceptor classes
      Like : Ease of Implementation
      Dislike : Difficult to comprehend